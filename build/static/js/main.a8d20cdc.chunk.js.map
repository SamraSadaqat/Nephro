{"version":3,"sources":["assets/images/login-icon.png","Auth/auth.js","components/Splash/style.js","components/Splash/Loader.js","components/Splash/Splash.js","routes/index.js","firebase.js","App.js","index.js"],"names":["Auth","isAuthenticated","authenticate","this","logout","getAuth","localStorage","getItem","style","container","textAlign","appheader","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","fontSize","color","logo","width","height","resizeMode","Loader","props","className","src","icon","alt","Splash","useEffect","setTimeout","history","push","bottom","Login","React","lazy","Dashboard","AppNavigation","PrivateRoute","Component","component","rest","render","to","PublicRoute","restricted","fallback","exact","path","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","makeStyles","theme","body","cursor","App","messaging","Notification","requestPermission","then","getToken","res","setItem","catch","err","console","log","navigator","serviceWorker","register","registration","scope","ReactDOM","StrictMode","document","getElementById"],"mappings":"yGAAe,QAA0B,wC,gCCAzC,IAAMA,EAAO,CACXC,iBAAiB,EACjBC,aAFW,WAGTC,KAAKF,iBAAkB,GAEzBG,OALW,WAMTD,KAAKF,iBAAkB,GAEzBI,QARW,WAST,QAAIC,aAAaC,QAAQ,eAMdP,O,oLCfFQ,EAAM,CACfC,UAAU,CACNC,UAAW,UAEhBC,UAAU,CACTC,gBAAiB,cAEjBC,UAAW,QACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,SAAU,qBACVC,MAAO,aAEPC,KAAK,CACDC,MAAM,IACNC,OAAO,MACPC,WAAW,Y,MCFJC,MATf,SAAgBC,GACd,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,cCUlCC,MAjBf,SAAgBL,GAOd,OANAM,qBAAU,WACRC,YAAW,WACTP,EAAMQ,QAAQC,KAAK,WAClB,QAIH,qBAAK1B,MAAOA,EAAMC,UAAlB,SACE,wBAAQD,MAAOA,EAAMG,UAArB,SACE,cAAC,QAAD,CAAOwB,QAAM,EAAb,SACE,qBAAKR,IAAKP,IAAMZ,MAAOA,EAAMY,KAAMS,IAAI,gB,QCgD3CO,EAAQC,IAAMC,MAAK,kBAAM,uDACzBC,EAAYF,IAAMC,MAAK,kBAAM,8DAGpB,SAASE,EAAcf,GACpC,IAAMgB,EAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAC1D,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACpB,GAAD,OACNzB,IAAKK,UAAY,cAACqC,EAAD,eAAejB,IAAY,cAAC,IAAD,CAAUqB,GAAG,gBAM3DC,EAAc,SAAC,GAAmD,IAAtCL,EAAqC,EAAhDC,UAAsBK,EAA0B,EAA1BA,WAAeJ,EAAW,0CACrE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACpB,GAAD,OACNzB,IAAKK,WAAa2C,EAChB,cAAC,IAAD,CAAUF,GAAG,yBAEb,cAACJ,EAAD,eAAejB,SAMzB,OACI,cAAC,IAAD,UACI,eAAC,WAAD,CAAUwB,SAAU,cAAC,EAAD,IAApB,UACE,cAACF,EAAD,CAAaG,OAAK,EAACC,KAAK,IAAIH,YAAY,EAAML,UAAWb,IACzD,cAACiB,EAAD,CACEC,YAAY,EACZE,OAAK,EACLC,KAAK,SACLR,UAAWP,IAEb,cAACK,EAAD,CAAcU,KAAK,aAAaR,UAAWJ,S,oBC1FvDa,IAASC,cAXM,CACXC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,aACnBC,MAAO,0CACPC,cAAe,iBAIJT,QAAf,E,MCTkBU,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,aAAc,CACZC,OAAQ,aAeC,SAASC,EAAIzC,GAc1B,OAbAY,IAAMN,WAAU,WACd,IAAMoC,EAAYf,EAASe,YAC3BC,aAAaC,oBACVC,MAAK,WACJH,EAAUI,WAAWD,MAAK,SAACE,GACzBlE,aAAamE,QAAQ,YAAaD,SAGrCE,OAAM,SAACC,GACNC,QAAQC,IAAI,QAASF,QAExB,IAEI,cAACnC,EAAD,IAzBL,kBAAmBsC,WACrBA,UAAUC,cACPC,SAAS,8BACTV,MAAK,SAAUW,GACdL,QAAQC,IAAI,qCAAsCI,EAAaC,UAEhER,OAAM,SAAUC,GACfC,QAAQC,IAAI,6CAA8CF,MCdhEQ,IAAStC,OACP,cAAC,IAAMuC,WAAP,UACE,cAAClB,EAAD,MAEFmB,SAASC,eAAe,W","file":"static/js/main.a8d20cdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/login-icon.391e64fd.png\";","const Auth = {\n  isAuthenticated: true,\n  authenticate() {\n    this.isAuthenticated = true;\n  },\n  logout() {\n    this.isAuthenticated = false;\n  },\n  getAuth() {\n    if (localStorage.getItem(\"@appToken\")) {\n      return true;\n    }\n    return false;\n  },\n};\nexport default Auth;\n","export const style={\n    container:{\n        textAlign: 'center',\n    },\n   appheader:{\n    backgroundColor: '#f4f4f4f410',\n    \n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'calc(10px + 2vmin)',\n    color: '#f4f4f410'\n   },\n    logo:{\n        width:250,\n        height:92.31,\n        resizeMode:'contain'\n    }\n}","import React, { useState, useEffect } from \"react\";\n// import { CircleLoader } from \"react-spinners\";\nimport icon from \"../../assets/images/login-icon.png\";\nimport logo from \"../../assets/images/login-icon.png\";\nimport { Zoom, Slide } from \"react-reveal\";\nimport { style } from \"./style\";\nimport \"./loader.css\";\nfunction Loader(props) {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={icon} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"../../assets/images/login-icon.png\";\nimport { Zoom, Slide } from \"react-reveal\";\nimport { style } from \"./style\";\nfunction Splash(props) {\n  useEffect(() => {\n    setTimeout(() => {\n      props.history.push(\"login\");\n    }, 4000);\n  });\n\n  return (\n    <div style={style.container}>\n      <header style={style.appheader}>\n        <Slide bottom>\n          <img src={logo} style={style.logo} alt=\"logo\" />\n        </Slide>\n      </header>\n    </div>\n  );\n}\nexport default Splash;\n","// import React, { Suspense } from \"react\";\n// import {\n//   Route,\n//   BrowserRouter as Router,\n//   Redirect,\n// } from \"react-router-dom\";\n// import Loader from \"../components/Splash/Loader\";\n// import Splash from \"../components/Splash/Splash\";\n// import Auth from \"../Auth/auth\";\n\n// const Login = React.lazy(() => import(\"../modules/auth-module/login\"));\n// const Dashboard = React.lazy(() => import(\"../components/common/dashboard\"));\n// export default function AppNavigation(props) {\n//   const PrivateRoute = ({ component: Component, ...rest }) => {\n//     return (\n//       <Route\n//         {...rest}\n//         render={(props) =>\n//           Auth.getAuth() ? <Component {...props} /> : <Redirect to=\"/login\" />\n//         }\n//       />\n//     );\n//   };\n\n//   const PublicRoute = ({ component: Component, restricted, ...rest }) => {\n//     return (\n//       <Route\n//         {...rest}\n//         render={(props) =>\n//           Auth.getAuth() && restricted ? (\n//             <Redirect to=\"/login\" />\n//           ) : (\n//             <Component {...props} />\n//           )\n//         }\n//       />\n//     );\n//   };\n//   return (\n//       <Router>\n//           <Suspense fallback={<Loader/>}>\n//           <PublicRoute restricted={true} path=\"/\" component={Splash} />\n//             <PublicRoute\n//               //restricted={true}\n//               path=\"/login\"\n//               component={Login}\n//               //exact\n//             />\n//             <PrivateRoute path=\"/\" component={Dashboard} />\n//           </Suspense>\n//       </Router>\n//   );\n// }\nimport React,{Suspense} from \"react\";\nimport {\n  Route,\n  BrowserRouter,\n  Redirect,\n} from \"react-router-dom\";\nimport Loader from \"../components/Splash/Loader\";\nimport Splash from \"../components/Splash/Splash\";\nimport Auth from \"../Auth/auth\";\n\nconst Login = React.lazy(() => import(\"../modules/auth-module/login\"));\nconst Dashboard = React.lazy(() => import(\"../components/common/dashboard\"));\n\n\nexport default function AppNavigation(props) {\n  const PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          Auth.getAuth() ? <Component {...props} /> : <Redirect to=\"/login\" />\n        }\n      />\n    );\n  };\n\n  const PublicRoute = ({ component: Component, restricted, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          Auth.getAuth() && restricted ? (\n            <Redirect to=\"/dashboard/customers\" />\n          ) : (\n            <Component {...props} />\n          )\n        }\n      />\n    );\n  };\n  return (\n      <BrowserRouter >\n          <Suspense fallback={<Loader />}>\n            <PublicRoute exact path=\"/\" restricted={true} component={Splash} />\n            <PublicRoute\n              restricted={true}\n              exact\n              path=\"/login\"\n              component={Login}\n            />\n            <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n          </Suspense>\n      </BrowserRouter>\n  );\n}\n\n","import firebase from 'firebase/app';\n\nconst config = {\n    apiKey: \"AIzaSyDCi8SoHj-y_afsmssIgoidvfKOWzOFkQg\",\n    authDomain: \"return-bees.firebaseapp.com\",\n    databaseURL: \"https://return-bees.firebaseio.com\",\n    projectId: \"return-bees\",\n    storageBucket: \"return-bees.appspot.com\",\n    messagingSenderId: \"9517490203\",\n    appId: \"1:9517490203:web:82b806c04987af89c618be\",\n    measurementId: \"G-H204EL19TV\"\n}\n\nfirebase.initializeApp(config)\nexport default firebase;","import React, { useState, useEffect } from \"react\";\nimport AppNavigation from \"../src/routes/\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport firebase from \"./firebase\";\nimport 'firebase/messaging';\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    \":#selector\": {\n      cursor: \"none\",\n    },\n  },\n}));\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(function (registration) {\n      console.log(\"Registration successful, scope is:\", registration.scope);\n    })\n    .catch(function (err) {\n      console.log(\"Service worker registration failed, error:\", err);\n    });\n}\n\nexport default function App(props) {\n  React.useEffect(() => {\n    const messaging = firebase.messaging();\n    Notification.requestPermission()\n      .then(() => {\n        messaging.getToken().then((res) => {\n          localStorage.setItem(\"@fcmToken\", res);\n        });\n      })\n      .catch((err) => {\n        console.log(\"Token\", err);\n      });\n  }, []);\n\n  return <AppNavigation />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}